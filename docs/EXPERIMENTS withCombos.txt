Implementation of withCombos

Benchmarked on OverheadIntBench.myroundbin with internal array-based assignment, since it
has almost no additional overhead. Boxes are applied to all program points and no tracing
is enabled.

Numers are the time (in ms) to excute a single myroundrobin method in ms. Columns are the amount
of pre-computation in myroundrobin, while rows are different mplementation of boxes.

no-effect: no boxes applied, the body is returned unaltered
eta-expansion: no boxes applied, the body is returned eta-expanded
opt e-e: like eta-expansions, but body(current) is precomputed
combos: standard Implementation
opt. combos: like combos, but body(current) is precomputed
notrace: like combos, but no check for tracing request
notrace+nocheck: like notracr, but box is applied without checking it is requested

                    eqs.body(current)       eqs.body            eqs
no effect:           1.254 ± 0.033           2.687 ± 0.044       3.078 ± 2.115
eta-expansion:       6.160 ± 0.192           7.358 ± 0.040       6.916 ± 1.473
opt e-e:             5.303 ± 0.034           9.837 ± 1.021      10.408 ± 0.113
combos:             11.036 ± 0.847          13.771 ± 1.391      12.945 ± 1.136
opt. combos:        10.420 ± 0.116          21.446 ± 0.119      28.248 ± 0.219
notrace:            10.186 ± 0.851
notrace+nocheck:     9.891 ± 0.130

Now we consider variants of combos in the case the combo is applied in a single program point

combos:              7.004 ± 0.050
nocheck:             9.611 ± 0.164

Now we consider a memoized variant of the implementation of the body method in EquationSystem

no effect:           1.227 ± 0.011          2.870 ± 2.218        2.554 ± 0.017
eta-expansion:       6.023 ± 0.042          6.865 ± 0.678        6.582 ± 0.496
opt e-e:             4.990 ± 0.494          9.957 ± 0.040        9.667 ± 0.940
combos              10.479 ± 0.083                              12.042 ± 0.114

Conclusions:

* Pre-computing eqs.body(current) in equation solver is always the best choice
* Precomputing body(current) in the implementation of combos (and likely similar layeres to the initial
  equation system), given a minor advantage in come cases, and a greater disadvantage in others. I think
  it is better non tot use it.
* Memoizing the body only gives a small advantage.
* Since generally combos are only applied to a small selection of unknowns, it is best to check
  if a combo assignment is defined for an unknown instead of relying on the fact that when it is not
  defined the assignment always returns the left combo.